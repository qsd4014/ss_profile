# Mihomo (Clash Meta) Configuration
# 基于clash.ini优化，集成2025年最佳实践
# 更新时间: 2025-09-29
# 修复版本: 节点选择和过滤规则已优化，与clash.ini保持一致

# ==== 基础网络配置 ====
port: 7890
socks-port: 7891
mixed-port: 7890
allow-lan: true
mode: rule
log-level: info
find-process-mode: strict
unified-delay: true
tcp-concurrent: true
global-client-fingerprint: chrome
keep-alive-idle: 600
keep-alive-interval: 15

# ==== 外部控制配置 ====
external-controller: 127.0.0.1:9090
secret: "your-secure-password-here"  # 请替换为您的密码
external-ui-url: "https://github.com/Zephyruso/zashboard/releases/latest/download/dist.zip"

# ==== GEO数据库配置 ====
geodata-mode: true
geodata-loader: memconservative
geo-auto-update: true
geo-update-interval: 48
geox-url:
  geoip: "https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip.dat"
  geosite: "https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat"
  mmdb: "https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip.metadb"

# ==== DNS防泄漏配置 ====
dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: false  # 建议关闭避免解析问题
  prefer-h3: true  # 启用DoH3
  respect-rules: true  # DNS遵循路由规则
  enhanced-mode: fake-ip
  cache-algorithm: arc
  cache-size: 2048
  fake-ip-range: 198.18.0.1/16
  default-nameserver:
    - 223.5.5.5
    - 1.1.1.1
  nameserver:
    - https://1.1.1.1/dns-query  # Cloudflare DoH3
    - https://dns.google/dns-query  # Google DoH3
    - https://dns.alidns.com/dns-query  # 阿里DoH
  nameserver-policy:
    "geosite:cn,private":
      - https://223.5.5.5/dns-query
      - https://doh.pub/dns-query
  fallback:
    - https://8.8.8.8/dns-query
    - tls://1.0.0.1:853
  fallback-filter:
    geoip: true
    geoip-code: CN
    geosite:
      - geolocation-!cn

# ==== 流量嗅探配置 ====
sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
  force-domain:
    - "+.v2ex.com"
  skip-domain:
    - "+.baidu.com"
    - "+.bilibili.com"

# ==== TUN模式配置 ====
tun:
  enable: true
  stack: mixed  # 混合堆栈模式
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true
  strict-route: true  # 严格路由避免泄漏
  mtu: 1500
  gso: true
  gso-max-size: 65536
  dns-hijack:
    - "any:53"
  udp-timeout: 300

# ==== 配置文件保存 ====
profile:
  store-selected: true
  store-fake-ip: true

# ==== 节点订阅配置 ====
proxy-providers:
  all:
    type: http
    url: "YOUR_SUBSCRIPTION_URL"  # 请替换为您的订阅链接
    interval: 3600
    path: ./providers/all.yaml
    health-check:
      enable: true
      interval: 300
      url: http://www.gstatic.com/generate_204

# ==== 手动节点配置 ====
proxies: []

# ==== 代理组配置 ====
proxy-groups:
  # 主要策略组（与clash.ini保持一致）
  - name: "🚀 节点选择"
    type: select
    proxies:
      - "♻️ 自动选择"
      - "0.X"
      - "🆓 公益"
      - "✈️ 手动选择"
      - "🛩️ 手动选择备用"
      - "🚁 自建节点"
      - "🔯 故障转移"
      - "🔮 负载均衡"
      - "🇭🇰 香港节点"
      - "🇨🇳 台湾节点"
      - "🇸🇬 狮城节点"
      - "🇯🇵 日本节点"
      - "🇺🇲 美国节点"
      - "🇰🇷 韩国节点"
      - DIRECT

  # 手动选择
  - name: "✈️ 手动选择"
    type: select
    use: [all]

  - name: "🛩️ 手动选择备用"
    type: select
    use: [all]

  # 通讯服务
  - name: "📲 电报消息"
    type: select
    proxies:
      - "🚀 节点选择"
      - "♻️ 自动选择"
      - "✈️ 手动选择"
      - "🛩️ 手动选择备用"
      - "🚁 自建节点"
      - "🇸🇬 狮城节点"
      - "🇭🇰 香港节点"
      - "🇨🇳 台湾节点"
      - "🇯🇵 日本节点"
      - "🇺🇲 美国节点"
      - "🇰🇷 韩国节点"
      - DIRECT

  # AI服务
  - name: "🌍 OpenAI"
    type: select
    use: [all]

  - name: "🌍 CleanIP"
    type: select
    use: [all]

  # 流媒体服务
  - name: "📹 油管视频"
    type: select
    proxies:
      - "🆓 公益"
      - "🚀 节点选择"
      - "✈️ 手动选择"
      - "🛩️ 手动选择备用"
      - "🚁 自建节点"
      - "♻️ 自动选择"
      - "🇸🇬 狮城节点"
      - "🇭🇰 香港节点"
      - "🇨🇳 台湾节点"
      - "🇯🇵 日本节点"
      - "🇺🇲 美国节点"
      - "🇰🇷 韩国节点"
      - DIRECT

  # 奈飞视频 - 使用地区过滤
  - name: "🎥 奈飞视频"
    type: select
    use: [all]
    filter: "(?i)^(?!.*([2-9]X|[1-9][0-9]+X|HOME)).*(新加坡|坡|狮城|SG|Singapore|美|US|us|香港|HK|台|TW|Taiwan).*$"
    proxies:
      - "✈️ 手动选择"

  # 迪士尼+ - 使用地区过滤
  - name: "🐹 DisneyPlus"
    type: select
    use: [all]
    filter: "(?i)^(?!.*([2-9]X|[1-9][0-9]+X|HOME)).*(新加坡|坡|狮城|SG|Singapore|美|US|us|香港|HK|台|TW|Taiwan).*$"
    proxies:
      - "✈️ 手动选择"
      - "🛩️ 手动选择备用"
      - "🚁 自建节点"

  # EMBY服务
  - name: "🎬 EMBY_proxy"
    type: select
    proxies:
      - "🆓 公益"
      - "0.X"
      - "🚁 自建节点"
      - "🔮 负载均衡"
      - DIRECT
      - "🚀 节点选择"
      - "✈️ 手动选择"
      - "🛩️ 手动选择备用"

  - name: "🎬 EMBY_direct"
    type: select
    proxies:
      - DIRECT
      - "🆓 公益"
      - "0.X"
      - "🚁 自建节点"
      - "🚀 节点选择"
      - "✈️ 手动选择"
      - "🛩️ 手动选择备用"

  - name: "🎦 HBO"
    type: select
    proxies:
      - "🇺🇲 美国节点"
      - "✈️ 手动选择"
      - "🛩️ 手动选择备用"
      - "🚁 自建节点"

  - name: "🎦 PrimeVideo"
    type: select
    proxies:
      - "🇺🇲 美国节点"
      - "✈️ 手动选择"
      - "🛩️ 手动选择备用"
      - "🚁 自建节点"

  - name: "🍎 AppleTV"
    type: select
    proxies:
      - DIRECT
      - "✈️ 手动选择"
      - "🛩️ 手动选择备用"
      - "🚁 自建节点"

  # 哔哩哔哩
  - name: "📺 哔哩哔哩"
    type: select
    proxies:
      - "🎯 全球直连"
      - "🇨🇳 台湾节点"
      - "🇭🇰 香港节点"

  # 科技服务
  - name: "📢 谷歌FCM"
    type: select
    proxies:
      - DIRECT
      - "✈️ 手动选择"
      - "🛩️ 手动选择备用"
      - "🚁 自建节点"
      - "🇺🇲 美国节点"
      - "🇭🇰 香港节点"
      - "🇨🇳 台湾节点"
      - "🇸🇬 狮城节点"
      - "🇯🇵 日本节点"
      - "🇰🇷 韩国节点"

  - name: "📢 谷歌"
    type: select
    proxies:
      - "🇺🇲 美国节点"
      - "✈️ 手动选择"
      - "🛩️ 手动选择备用"
      - "🚁 自建节点"
      - "🇭🇰 香港节点"
      - "🇨🇳 台湾节点"
      - "🇸🇬 狮城节点"
      - "🇯🇵 日本节点"
      - "🇰🇷 韩国节点"

  # 媒体分类
  - name: "🌍 国外媒体"
    type: select
    proxies:
      - "🚀 节点选择"
      - "♻️ 自动选择"
      - "✈️ 手动选择"
      - "🛩️ 手动选择备用"
      - "🚁 自建节点"
      - "🇭🇰 香港节点"
      - "🇨🇳 台湾节点"
      - "🇸🇬 狮城节点"
      - "🇯🇵 日本节点"
      - "🇺🇲 美国节点"
      - "🇰🇷 韩国节点"
      - DIRECT

  - name: "🌏 国内媒体"
    type: select
    proxies:
      - DIRECT
      - "🚀 节点选择"
      - "✈️ 手动选择"
      - "🛩️ 手动选择备用"
      - "🚁 自建节点"
      - "🇭🇰 香港节点"
      - "🇨🇳 台湾节点"
      - "🇸🇬 狮城节点"
      - "🇯🇵 日本节点"

  - name: "🍎 苹果服务"
    type: select
    proxies:
      - DIRECT
      - "🚀 节点选择"
      - "✈️ 手动选择"
      - "🛩️ 手动选择备用"
      - "🚁 自建节点"
      - "🇺🇲 美国节点"
      - "🇭🇰 香港节点"
      - "🇨🇳 台湾节点"
      - "🇸🇬 狮城节点"
      - "🇯🇵 日本节点"
      - "🇰🇷 韩国节点"

  - name: "Ⓜ️ Bing"
    type: select
    proxies:
      - "🇺🇲 美国节点"
      - DIRECT
      - "🚀 节点选择"
      - "✈️ 手动选择"
      - "🛩️ 手动选择备用"
      - "🚁 自建节点"
      - "🇭🇰 香港节点"
      - "🇨🇳 台湾节点"
      - "🇸🇬 狮城节点"
      - "🇯🇵 日本节点"
      - "🇰🇷 韩国节点"

  - name: "Ⓜ️ 微软云盘"
    type: select
    proxies:
      - DIRECT
      - "🚀 节点选择"
      - "✈️ 手动选择"
      - "🛩️ 手动选择备用"
      - "🚁 自建节点"
      - "🇺🇲 美国节点"
      - "🇭🇰 香港节点"
      - "🇨🇳 台湾节点"
      - "🇸🇬 狮城节点"
      - "🇯🇵 日本节点"
      - "🇰🇷 韩国节点"

  - name: "Ⓜ️ 微软服务"
    type: select
    proxies:
      - DIRECT
      - "🚀 节点选择"
      - "✈️ 手动选择"
      - "🛩️ 手动选择备用"
      - "🚁 自建节点"
      - "🇺🇲 美国节点"
      - "🇭🇰 香港节点"
      - "🇨🇳 台湾节点"
      - "🇸🇬 狮城节点"
      - "🇯🇵 日本节点"
      - "🇰🇷 韩国节点"

  # 游戏平台
  - name: "🎮 游戏平台"
    type: select
    proxies:
      - DIRECT
      - "🚀 节点选择"
      - "✈️ 手动选择"
      - "🛩️ 手动选择备用"
      - "🚁 自建节点"
      - "🇺🇲 美国节点"
      - "🇭🇰 香港节点"
      - "🇨🇳 台湾节点"
      - "🇸🇬 狮城节点"
      - "🇯🇵 日本节点"
      - "🇰🇷 韩国节点"

  # 系统策略组
  - name: "🎯 全球直连"
    type: select
    proxies:
      - DIRECT
      - "♻️ 自动选择"

  - name: "🛑 广告拦截"
    type: select
    proxies:
      - REJECT
      - DIRECT

  - name: "🍃 应用净化"
    type: select
    proxies:
      - REJECT
      - DIRECT

  - name: "🐟 漏网之鱼"
    type: select
    proxies:
      - "🚀 节点选择"
      - "✈️ 手动选择"
      - "🛩️ 手动选择备用"
      - "🚁 自建节点"
      - "♻️ 自动选择"
      - DIRECT
      - "🇭🇰 香港节点"
      - "🇨🇳 台湾节点"
      - "🇸🇬 狮城节点"
      - "🇯🇵 日本节点"
      - "🇺🇲 美国节点"
      - "🇰🇷 韩国节点"

  # ===== 修复的特殊节点组 =====
  # 0.X 组 - 修复过滤规则，排除高倍流量
  - name: "0.X"
    type: select
    use: [all]
    filter: "(?=.*(0\\.[0-9]+|直连|下载))(?!.*([2-9]X|[1-9][0-9]+X|HOME))"

  # 地区节点组 - 全部修复过滤规则
  - name: "🇭🇰 香港节点"
    type: select
    use: [all]
    filter: "(?i)^(?!.*([2-9]X|[1-9][0-9]+X|HOME)).*(香港|HK|Hong Kong).*$"
    url: http://www.gstatic.com/generate_204
    interval: 300
    tolerance: 50

  - name: "🇯🇵 日本节点"
    type: url-test
    use: [all]
    filter: "(?i)^(?!.*([2-9]X|[1-9][0-9]+X|HOME)).*(日本|川日|东京|大阪|泉日|埼玉|沪日|深日|[^-]日|JP|Japan).*$"
    url: http://www.gstatic.com/generate_204
    interval: 300
    tolerance: 50

  - name: "🇺🇲 美国节点"
    type: select
    use: [all]
    filter: "(?i)^(?!.*([2-9]X|[1-9][0-9]+X|HOME)).*(美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States|us).*$"
    url: http://www.gstatic.com/generate_204
    interval: 300
    tolerance: 150

  - name: "🇨🇳 台湾节点"
    type: select
    use: [all]
    filter: "(?i)^(?!.*([2-9]X|[1-9][0-9]+X|HOME)).*(台|新北|彰化|TW|Taiwan).*$"
    url: http://www.gstatic.com/generate_204
    interval: 300
    tolerance: 50

  - name: "🇸🇬 狮城节点"
    type: select
    use: [all]
    filter: "(?i)^(?!.*([2-9]X|[1-9][0-9]+X|HOME)).*(新加坡|坡|狮城|SG|Singapore).*$"
    url: http://www.gstatic.com/generate_204
    interval: 300
    tolerance: 50

  - name: "🇰🇷 韩国节点"
    type: url-test
    use: [all]
    filter: "(?i)^(?!.*([2-9]X|[1-9][0-9]+X|HOME)).*(KR|Korea|KOR|首尔|韩|韓).*$"
    url: http://www.gstatic.com/generate_204
    interval: 300
    tolerance: 50

  # 公共服务节点
  - name: "🆓 公益"
    type: select
    use: [all]
    filter: "(?i)(Hax|hax|VC|Vc|vc|buyvm|BuyVM|BUYVM|鸡|Woiden|woiden|Euserv|Optimization|Akari|FREE|Oracle|oracle|Vult|advins|CF)"
    url: http://www.gstatic.com/generate_204
    interval: 300
    tolerance: 50

  - name: "🚁 自建节点"
    type: select
    use: [all]
    filter: "(?i)(自建|Oracle|oracle)"

  # 自动策略（屏蔽高倍流量）
  - name: "♻️ 自动选择"
    type: url-test
    use: [all]
    filter: "(?i)^(?!.*(电信|联通|移动|四川|广西|([2-9]|[1-9][0-9]+)X|HOME)).*$"
    url: http://www.gstatic.com/generate_204
    interval: 300
    tolerance: 50

  - name: "🔯 故障转移"
    type: fallback
    use: [all]
    filter: "(?i)^(?!.*(电信|联通|移动|四川|广西|([2-9]|[1-9][0-9]+)X|HOME)).*$"
    url: http://www.gstatic.com/generate_204
    interval: 300
    tolerance: 50
    lazy: true

  - name: "🔮 负载均衡"
    type: load-balance
    use: [all]
    filter: "(?i)(自建|Oracle|oracle)"
    url: http://www.gstatic.com/generate_204
    interval: 300
    tolerance: 50
    strategy: round-robin

# ==== 分流规则 ====
rules:
  # 局域网直连
  - RULE-SET,LocalAreaNetwork,🎯 全球直连
  - RULE-SET,UnBan,🎯 全球直连

  # 广告拦截
  - RULE-SET,BanAD,🛑 广告拦截
  - RULE-SET,BanProgramAD,🍃 应用净化

  # AI服务
  - RULE-SET,openAI,🌍 OpenAI
  - RULE-SET,OpenAI,🌍 OpenAI
  - RULE-SET,Claude,🌍 OpenAI
  - RULE-SET,CleanIP,🌍 CleanIP

  # 流媒体服务
  - RULE-SET,YouTube,📹 油管视频
  - RULE-SET,Netflix,🎥 奈飞视频
  - RULE-SET,AmazonIp,🎥 奈飞视频
  - RULE-SET,Disney,🐹 DisneyPlus
  - RULE-SET,HBO,🎦 HBO
  - RULE-SET,HBOUSA,🎦 HBO
  - RULE-SET,AmazonPrimeVideo,🎦 PrimeVideo
  - RULE-SET,AppleTV,🍎 AppleTV

  # 谷歌服务
  - RULE-SET,GoogleFCM,📢 谷歌FCM
  - RULE-SET,Google,📢 谷歌

  # 国内谷歌服务直连
  - RULE-SET,GoogleCN,🎯 全球直连
  - RULE-SET,SteamCN,🎯 全球直连

  # 微软服务
  - RULE-SET,Bing,Ⓜ️ Bing
  - RULE-SET,OneDrive,Ⓜ️ 微软云盘
  - RULE-SET,Microsoft,Ⓜ️ 微软服务

  # 苹果服务
  - RULE-SET,Apple,🍎 苹果服务

  # 电报
  - RULE-SET,Telegram,📲 电报消息

  # 游戏平台
  - RULE-SET,Epic,🎮 游戏平台
  - RULE-SET,Sony,🎮 游戏平台
  - RULE-SET,Steam,🎮 游戏平台
  - RULE-SET,Nintendo,🎮 游戏平台

  # EMBY服务
  - RULE-SET,Emby_proxy,🎬 EMBY_proxy
  - RULE-SET,Emby_direct,🎬 EMBY_direct

  # 哔哩哔哩
  - RULE-SET,BilibiliHMT,📺 哔哩哔哩
  - RULE-SET,Bilibili,📺 哔哩哔哩

  # 国内外媒体
  - RULE-SET,ChinaMedia,🌏 国内媒体
  - RULE-SET,ProxyMedia,🌍 国外媒体

  # 代理规则
  - RULE-SET,ProxyGFWlist,🚀 节点选择

  # 直连规则
  - RULE-SET,ChinaDomain,🎯 全球直连
  - RULE-SET,ChinaCompanyIp,🎯 全球直连
  - RULE-SET,Download,🎯 全球直连
  - RULE-SET,Custom_direct,🎯 全球直连

  # 地理位置规则
  - GEOIP,CN,🎯 全球直连
  - MATCH,🐟 漏网之鱼

# ==== 规则集配置 ====
rule-providers:
  LocalAreaNetwork:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/LocalAreaNetwork.list"
    path: ./ruleset/LocalAreaNetwork.list
    interval: 86400

  UnBan:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/UnBan.list"
    path: ./ruleset/UnBan.list
    interval: 86400

  BanAD:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanAD.list"
    path: ./ruleset/BanAD.list
    interval: 86400

  BanProgramAD:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanProgramAD.list"
    path: ./ruleset/BanProgramAD.list
    interval: 86400

  openAI:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/qsd4014/ss_profile/main/Rules/openAI.list"
    path: ./ruleset/openAI.list
    interval: 86400

  OpenAI:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/OpenAI/OpenAI.list"
    path: ./ruleset/OpenAI.list
    interval: 86400

  Claude:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Claude/Claude.list"
    path: ./ruleset/Claude.list
    interval: 86400

  CleanIP:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/qsd4014/ss_profile/refs/heads/main/Rules/CleanIP.list"
    path: ./ruleset/CleanIP.list
    interval: 86400

  YouTube:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/YouTube.list"
    path: ./ruleset/YouTube.list
    interval: 86400

  Netflix:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Netflix/Netflix.list"
    path: ./ruleset/Netflix.list
    interval: 86400

  AmazonIp:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/AmazonIp.list"
    path: ./ruleset/AmazonIp.list
    interval: 86400

  Disney:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Disney/Disney.list"
    path: ./ruleset/Disney.list
    interval: 86400

  HBO:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/HBO/HBO.list"
    path: ./ruleset/HBO.list
    interval: 86400

  HBOUSA:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/HBOUSA/HBOUSA.list"
    path: ./ruleset/HBOUSA.list
    interval: 86400

  AmazonPrimeVideo:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/AmazonPrimeVideo/AmazonPrimeVideo.list"
    path: ./ruleset/AmazonPrimeVideo.list
    interval: 86400

  AppleTV:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/AppleTV/AppleTV.list"
    path: ./ruleset/AppleTV.list
    interval: 86400

  GoogleFCM:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/GoogleFCM.list"
    path: ./ruleset/GoogleFCM.list
    interval: 86400

  Google:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Google.list"
    path: ./ruleset/Google.list
    interval: 86400

  GoogleCN:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/GoogleCN.list"
    path: ./ruleset/GoogleCN.list
    interval: 86400

  SteamCN:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/SteamCN.list"
    path: ./ruleset/SteamCN.list
    interval: 86400

  Bing:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Bing/Bing.list"
    path: ./ruleset/Bing.list
    interval: 86400

  OneDrive:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/OneDrive.list"
    path: ./ruleset/OneDrive.list
    interval: 86400

  Microsoft:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Microsoft.list"
    path: ./ruleset/Microsoft.list
    interval: 86400

  Apple:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Apple.list"
    path: ./ruleset/Apple.list
    interval: 86400

  Telegram:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Telegram.list"
    path: ./ruleset/Telegram.list
    interval: 86400

  Epic:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Epic.list"
    path: ./ruleset/Epic.list
    interval: 86400

  Sony:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Sony.list"
    path: ./ruleset/Sony.list
    interval: 86400

  Steam:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Steam.list"
    path: ./ruleset/Steam.list
    interval: 86400

  Nintendo:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Nintendo.list"
    path: ./ruleset/Nintendo.list
    interval: 86400

  Emby_proxy:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/qsd4014/ss_profile/main/Rules/Emby_proxy.list"
    path: ./ruleset/Emby_proxy.list
    interval: 86400

  Emby_direct:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/qsd4014/ss_profile/main/Rules/Emby_direct.list"
    path: ./ruleset/Emby_direct.list
    interval: 86400

  BilibiliHMT:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/BilibiliHMT.list"
    path: ./ruleset/BilibiliHMT.list
    interval: 86400

  Bilibili:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Bilibili.list"
    path: ./ruleset/Bilibili.list
    interval: 86400

  ChinaMedia:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaMedia.list"
    path: ./ruleset/ChinaMedia.list
    interval: 86400

  ProxyMedia:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ProxyMedia.list"
    path: ./ruleset/ProxyMedia.list
    interval: 86400

  ProxyGFWlist:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ProxyGFWlist.list"
    path: ./ruleset/ProxyGFWlist.list
    interval: 86400

  ChinaDomain:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaDomain.list"
    path: ./ruleset/ChinaDomain.list
    interval: 86400

  ChinaCompanyIp:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaCompanyIp.list"
    path: ./ruleset/ChinaCompanyIp.list
    interval: 86400

  Download:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Download.list"
    path: ./ruleset/Download.list
    interval: 86400

  Custom_direct:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/qsd4014/ss_profile/main/Rules/Custom_direct.list"
    path: ./ruleset/Custom_direct.list
    interval: 86400

# ==== 修复说明 ====
# 修复版本 - 2025-09-29
# 1. 修复了0.X策略组的过滤规则，正确排除高倍流量节点（2X/3X/10X等）
# 2. 修复了所有地区节点组的过滤规则，确保排除高倍流量
# 3. 策略组顺序和配置与clash.ini保持完全一致
# 4. 移除了无效的COMPATIBLE备用选项
# 5. 优化了正则表达式，提高匹配准确性
# 6. 确保♻️自动选择等策略也正确过滤高倍流量
# 7. 请将YOUR_SUBSCRIPTION_URL替换为实际订阅链接